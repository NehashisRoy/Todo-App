{"version":3,"sources":["components/Header.js","components/Form.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","React","createElement","className","uuidv4","require","v4","Form","_ref","input","setInput","todos","setTodos","editTodo","setEditTodo","useEffect","title","onSubmit","e","preventDefault","id","completed","newTodo","map","todo","updateTodo","concat","_toConsumableArray","complete","type","placeholder","value","required","onChange","target","TodoList","key","onClick","item","_objectSpread","handelComplete","_ref2","findTodo","find","handelEdit","_ref3","filter","handelDelete","App","initialState","JSON","parse","localStorage","getItem","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","setItem","stringify","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.fb679184.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Todo List</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect } from \"react\";\r\nconst { v4: uuidv4 } = require(\"uuid\");\r\nuuidv4(); // â‡¨ '1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bed'\r\n\r\nconst Form = ({ input, setInput, todos, setTodos, editTodo, setEditTodo }) => {\r\n  const updateTodo = (title, id, completed) => {\r\n    const newTodo = todos.map((todo) =>\r\n      todo.id === id ? { title, id, completed } : todo\r\n    );\r\n    setTodos(newTodo);\r\n    setEditTodo(\"\");\r\n  };\r\n  useEffect(() => {\r\n    if (editTodo) {\r\n      setInput(editTodo.title);\r\n    } else {\r\n      setInput(\"\");\r\n    }\r\n  }, [setInput, editTodo]);\r\n\r\n  const onInputChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!editTodo) {\r\n      setTodos([...todos, { id: uuidv4(), title: input, complete: false }]);\r\n      setInput(\"\");\r\n    } else {\r\n      updateTodo(input, editTodo.id, editTodo.completed);\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={onFormSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter a Todo...\"\r\n        className=\"task-input\"\r\n        value={input}\r\n        required\r\n        onChange={onInputChange}\r\n      />\r\n      <button className=\"button-add\" type=\"submit\">\r\n        {editTodo ? \"Ok\" : \"Add\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst TodoList = ({ todos, setTodos, setEditTodo }) => {\r\n  const handelComplete = (todo) => {\r\n    setTodos(\r\n      todos.map((item) => {\r\n        if (item.id === todo.id) {\r\n          return { ...item, completed: !item.completed };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handelEdit = ({ id }) => {\r\n    const findTodo = todos.find((todo) => todo.id === id);\r\n    setEditTodo(findTodo);\r\n  };\r\n\r\n  const handelDelete = ({ id }) => {\r\n    setTodos(todos.filter((todo) => todo.id != id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {todos.map((todo) => (\r\n        <li className=\"list-item\" key={todo.id}>\r\n          <input\r\n            type=\"text\"\r\n            value={todo.title}\r\n            className={`list ${todo.completed ? \"complete\" : \"\"}`}\r\n            onChange={(e) => e.preventDefault()}\r\n          ></input>\r\n          <div>\r\n            <button\r\n              className=\"button-complete task-button\"\r\n              onClick={() => handelComplete(todo)}\r\n            >\r\n              <i className=\"fa fa-check-circle\"></i>\r\n            </button>\r\n            <button\r\n              className=\"button-complete task-button\"\r\n              onClick={() => handelEdit(todo)}\r\n            >\r\n              <i className=\"fa fa-edit\"></i>\r\n            </button>\r\n            <button\r\n              className=\"button-complete task-button\"\r\n              onClick={() => handelDelete(todo)}\r\n            >\r\n              <i className=\"fa fa-trash\"></i>\r\n            </button>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\nimport \"./App.css\";\n\nfunction App() {\n  const initialState = JSON.parse(localStorage.getItem(\"todos\")) || [];\n  const [input, setInput] = useState(\"\");\n  const [todos, setTodos] = useState(initialState);\n  const [editTodo, setEditTodo] = useState(null);\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"app-wrapper\">\n        <div>\n          <Header />\n        </div>\n        <div>\n          <Form\n            input={input}\n            setInput={setInput}\n            todos={todos}\n            setTodos={setTodos}\n            editTodo={editTodo}\n            setEditTodo={setEditTodo}\n          />\n        </div>\n        <div>\n          <TodoList\n            todos={todos}\n            setTodos={setTodos}\n            setEditTodo={setEditTodo}\n          ></TodoList>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}